DEPTH = 64; % Memory depth and width are required %
WIDTH = 32; % Enter a decimal number %
ADDRESS_RADIX = HEX; % Address and value radixes are optional %
DATA_RADIX = HEX; % Enter BIN, DEC, HEX, or OCT; unless %
% otherwise specified, radixes = HEX %
CONTENT
BEGIN
 0 : 20020080; % (00) addi $2, $0, 10000000b # address 80h %
 1 : 20030084; % (04) addi $3, $0, 10000100b # address 84h %
 2 : 20010088; % (08) addi $1, $0, 10001000h # address 88h %
 3 : 200400c0; % (0c) addi $4, $0, 11000000b # address c0h %
 4 : 200500c4; % (10) addi $5, $0, 11000100b # address c4h %
 5 : 8c860000; % (14) loop: lw $6, 0($4) # input data from [c0h] %
 6 : 8ca70000; % (18) 		lw $7, 0($5) # input data from [c4h] %
 7 : 00c74020; % (1C) 		add $6, $7, $8 # $8 = $6 + $7 %
 8 : ac460000; % (20) sw $6, 0($2) # output [C0h] to [80h] %
 9 : ac670000; % (24) sw $7, 0($3) # output [c4h] to [84h] %
 10 : ac280000; % (28) sw $8, 0($1) # output [c0h] + [c4h] to [88h] %
 11 : 08000005; % (2c) j loop # loop %

END ; 